{"version":3,"sources":["components/Header/Header.js","components/Main/Section/Section.js","components/Main/Form/Form.js","components/Main/Main.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","Section","_props$movie","movie","title","year","format","stars","movieId","_useState","useState","_useState2","Object","slicedToArray","open","setStatus","_useState3","_useState4","will","setCheck","onClick","removeItem","style","float","Fragment","join","removeMovieFromWillWatch","addMovieToWillWatch","toggleWillWatch","removeMovieByIdFromServer","Form","inputTitleRef","React","createRef","inputYearRef","inputFormatRef","inputStarsRef","correct","color","textAlign","htmlFor","type","name","id","required","placeholder","autoComplete","pattern","ref","rows","e","preventDefault","date","Date","current","value","newMovie","split","getTime","Math","random","addNewMovie","handleSubmit","Main","state","movies","isLoading","inputFilter","onload","moviesWillWatch","sort","inputFilterValue","handleInputFileLoader","file","target","files","reader","FileReader","readAsText","loadedFileContentArray","result","filter","Boolean","map","item","_item$split","_item$split2","foo","trim","_this","setState","concat","toConsumableArray","fetch","method","body","JSON","stringify","apply","handleGetMoviesData","removeMovieById","updateMovies","updateMoviesWillWatch","sortByAbc","moviesSort","b","nameA","toLowerCase","nameB","getDataFromServer","then","res","json","data","changeInputFilterValue","confirmAlert","message","buttons","label","mode","headers","Content-Type","_this2","this","Form_Form","onChange","length","includes","Main_Section_Section","key","alt","href","Component","App","Header_Header","components_Main_Main","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6126013c.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Header.css\";\nimport \"../../../node_modules/@fortawesome/fontawesome-free/css/all.css\";\nimport \"../../../node_modules/animate.css/animate.css\";\n\nexport default function Header(props) {\n  return (\n    <div className=\"header\">\n      <div className=\"header__logo\">\n        <i className=\"animated infinite pulse fas fa-film\">{\"\"}</i>\n      </div>\n      <div className=\"header__title\">\n        <span className=\"animated fadeInDown delay-2s\">MOVIES LIBRARY</span>\n      </div>\n      <div className=\"header__authorization\">\n        {\" \"}\n        <i className=\"animated infinite pulse fas fa-film\">{\"\"}</i>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\r\n\r\nimport \"./Section.css\";\r\n\r\nconst Section = props => {\r\n  const { title, year, format, stars, movieId } = props.movie;\r\n  let [open, setStatus] = useState(false);\r\n  let [will, setCheck] = useState(false);\r\n\r\n  function toggleWillWatch() {\r\n    const { movie, removeMovieFromWillWatch, addMovieToWillWatch } = props;\r\n    if (will) {\r\n      removeMovieFromWillWatch(movieId);\r\n      setCheck((will = !will));\r\n    } else {\r\n      addMovieToWillWatch(movie);\r\n      setCheck((will = !will));\r\n    }\r\n  }\r\n  return (\r\n    <section className=\"container__section--item\">\r\n      <span\r\n        className=\"removeButton\"\r\n        onClick={() => props.removeItem(movieId)}\r\n        style={{ float: \"right\" }}\r\n      >\r\n        ✖\r\n      </span>\r\n      <h1\r\n        className=\"container__section--title\"\r\n        onClick={() => setStatus((open = !open))}\r\n      >\r\n        {title}\r\n      </h1>\r\n\r\n      {open ? (\r\n        <>\r\n          <div className=\"container__section--info\">\r\n            <p>\r\n              <b>ID:</b> {movieId}\r\n            </p>\r\n            <p>\r\n              <b>Year:</b> {year}\r\n            </p>\r\n            <p>\r\n              {\" \"}\r\n              <b>Format:</b> {format}{\" \"}\r\n            </p>\r\n            <p>\r\n              {\" \"}\r\n              <b>Actors:</b> {stars.join(\", \")}{\" \"}\r\n            </p>\r\n          </div>\r\n          <div className=\"container__section--buttons\">\r\n            <div\r\n              className={will ? \"btn toggle\" : \"btn\"}\r\n              onClick={() => toggleWillWatch()}\r\n            >\r\n              {will ? \"Added\" : \"Watch\"}\r\n            </div>\r\n            <div\r\n              className=\"btn delete\"\r\n              onClick={() => props.removeMovieByIdFromServer(movieId)}\r\n            >\r\n              Delete\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./Form.css\";\r\n\r\nexport default function Form(props) {\r\n  const inputTitleRef = React.createRef();\r\n  const inputYearRef = React.createRef();\r\n  const inputFormatRef = React.createRef();\r\n  const inputStarsRef = React.createRef();\r\n\r\n  let [correct, setStatus] = useState(true);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    let date = new Date();\r\n\r\n    if (\r\n      inputTitleRef.current.value &&\r\n      inputYearRef.current.value &&\r\n      inputFormatRef.current.value &&\r\n      inputStarsRef.current.value\r\n    ) {\r\n      setStatus((correct = true));\r\n      let newMovie = {\r\n        title: inputTitleRef.current.value,\r\n        year: inputYearRef.current.value,\r\n        format: inputFormatRef.current.value,\r\n        stars: inputStarsRef.current.value.split(\",\"),\r\n        movieId: date.getTime() + Math.random()\r\n      };\r\n\r\n      props.addNewMovie(newMovie);\r\n      inputTitleRef.current.value = \"\";\r\n      inputYearRef.current.value = \"\";\r\n      inputFormatRef.current.value = \"\";\r\n      inputStarsRef.current.value = \"\";\r\n    } else {\r\n      setStatus((correct = false));\r\n      return;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"contaiter__form\">\r\n      <form className=\"form\">\r\n        {!correct ? (\r\n          <h3 style={{ color: \"red\", textAlign: \"center\" }}>Wrong form</h3>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <label htmlFor=\"title\">\r\n          Film title\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            id=\"title\"\r\n            required\r\n            placeholder=\"Enter film title\"\r\n            autoComplete=\"off\"\r\n            pattern=\"^[A-ZА-ЯЁ]{1}[a-zа-яё]+$\"\r\n            ref={inputTitleRef}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"year\">\r\n          Year\r\n          <input\r\n            type=\"text\"\r\n            name=\"year\"\r\n            id=\"year\"\r\n            required\r\n            placeholder=\"Enter year\"\r\n            autoComplete=\"off\"\r\n            pattern=\"[0-9]{4}\"\r\n            ref={inputYearRef}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"format\">\r\n          Format\r\n          <input\r\n            type=\"text\"\r\n            name=\"format\"\r\n            id=\"format\"\r\n            required\r\n            placeholder=\"Enter format\"\r\n            autoComplete=\"off\"\r\n            ref={inputFormatRef}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"stars\">\r\n          Actors\r\n          <textarea\r\n            type=\"text\"\r\n            name=\"stars\"\r\n            id=\"stars\"\r\n            rows=\"2\"\r\n            required\r\n            placeholder=\"FirstName LastName, FirstName LastName... \"\r\n            ref={inputStarsRef}\r\n          />\r\n        </label>\r\n        <div className=\"wrapper__button\">\r\n          <button type=\"submit\" onClick={e => handleSubmit(e)} className=\"btn\">\r\n            Add\r\n          </button>\r\n          <button type=\"reset\" className=\"btn delete\">\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\n\r\nimport Section from \"./Section/Section\";\r\nimport Form from \"./Form/Form\";\r\n\r\nimport \"./Main.css\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    movies: [],\r\n    isLoading: false,\r\n    inputFilter: \"\",\r\n    onload: false,\r\n    moviesWillWatch: [],\r\n    sort: false,\r\n    inputFilterValue: \"\"\r\n  };\r\n\r\n  handleInputFileLoader = e => {\r\n    let file = e.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.readAsText(file);\r\n\r\n    reader.onload = () => {\r\n      let loadedFileContentArray = reader.result\r\n        .split(\"\\n\\n\")\r\n        .filter(Boolean)\r\n        .map(item => {\r\n          const [title, year, format, stars] = item.split(\"\\n\");\r\n\r\n          const foo = value => value.split(\":\")[1].trim();\r\n          const getUniqueId = () => {\r\n            const date = new Date();\r\n\r\n            return date.getTime() + Math.random();\r\n          };\r\n\r\n          return {\r\n            title: foo(title),\r\n            year: foo(year),\r\n            format: foo(format),\r\n            stars: foo(stars)\r\n              .split(\",\")\r\n              .map(item => item.trim()),\r\n            movieId: getUniqueId()\r\n          };\r\n        });\r\n\r\n      this.setState({\r\n        movies: [...this.state.movies, ...loadedFileContentArray],\r\n        onload: true\r\n      });\r\n      fetch(\"https://test-server-node-express.herokuapp.com/movies\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(...loadedFileContentArray)\r\n      });\r\n    };\r\n  };\r\n\r\n  handleGetMoviesData = () => {\r\n    this.setState({\r\n      onload: true\r\n    });\r\n  };\r\n\r\n  removeMovieById = id => {\r\n    const updateMovies = this.state.movies.filter(function(movie) {\r\n      return movie.movieId !== id;\r\n    });\r\n\r\n    this.setState({\r\n      movies: updateMovies\r\n    });\r\n  };\r\n\r\n  addMovieToWillWatch = movie => {\r\n    const updateMoviesWillWatch = [...this.state.moviesWillWatch, movie];\r\n    this.setState({\r\n      moviesWillWatch: updateMoviesWillWatch\r\n    });\r\n  };\r\n\r\n  removeMovieFromWillWatch = id => {\r\n    const updateMoviesWillWatch = this.state.moviesWillWatch.filter(function(\r\n      movie\r\n    ) {\r\n      return movie.movieId !== id;\r\n    });\r\n\r\n    this.setState({\r\n      moviesWillWatch: updateMoviesWillWatch\r\n    });\r\n  };\r\n  sortByAbc = () => {\r\n    let moviesSort = [...this.state.movies];\r\n    if (!this.state.sort) {\r\n      moviesSort.sort(function(a, b) {\r\n        var nameA = a.title.toLowerCase(),\r\n          nameB = b.title.toLowerCase();\r\n        if (nameA < nameB) return -1;\r\n        if (nameA > nameB) return 1;\r\n        return 0;\r\n      });\r\n    } else {\r\n      moviesSort.sort(function(a, b) {\r\n        var nameA = a.title.toLowerCase(),\r\n          nameB = b.title.toLowerCase();\r\n        if (nameA < nameB) return 1;\r\n        if (nameA > nameB) return -1;\r\n        return 0;\r\n      });\r\n    }\r\n    this.setState({\r\n      movies: moviesSort,\r\n      sort: !this.state.sort\r\n    });\r\n  };\r\n  getDataFromServer = () => {\r\n    fetch(\"https://test-server-node-express.herokuapp.com/movies\")\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({\r\n          movies: [...this.state.movies, ...data],\r\n          onload: true\r\n        });\r\n      });\r\n  };\r\n\r\n  changeInputFilterValue = e => {\r\n    this.setState({\r\n      inputFilterValue: e.target.value\r\n    });\r\n  };\r\n\r\n  addNewMovie = movie => {\r\n    fetch(\"https://test-server-node-express.herokuapp.com/movies\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(movie)\r\n    });\r\n\r\n    this.setState({\r\n      movies: [...this.state.movies, movie]\r\n    });\r\n  };\r\n\r\n  removeMovieByIdFromServer = id => {\r\n    confirmAlert({\r\n      title: \"Confirm to detete from server\",\r\n      message: \"Are you sure to do this.\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => {\r\n            this.removeMovieById(id);\r\n            fetch(\r\n              \"https://test-server-node-express.herokuapp.com/movies/delete\",\r\n              {\r\n                method: \"POST\",\r\n                mode: \"no-cors\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(id)\r\n              }\r\n            );\r\n          }\r\n        },\r\n        {\r\n          label: \"No\",\r\n          onClick: () => null\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n    return (\r\n      <main className=\"container__main\">\r\n        <article className=\"container__main--form\">\r\n          <Form addNewMovie={this.addNewMovie} />\r\n        </article>\r\n        <article className=\"container__main--inputs\" />\r\n\r\n        {this.state.onload ? (\r\n          <article className=\"container__main--moviesList\">\r\n            <div className=\"inputFilter\">\r\n              <label>\r\n                <input\r\n                  className=\"inputFilter__input\"\r\n                  type=\"text\"\r\n                  id=\"inputFilter\"\r\n                  name=\"inputFilter\"\r\n                  value={this.state.inputFilterValue}\r\n                  onChange={this.changeInputFilterValue}\r\n                  placeholder=\"Enter your value\"\r\n                />\r\n              </label>\r\n              <div className=\"wrapper__button\">\r\n                <button className=\"btn sortbutton\" onClick={this.sortByAbc}>\r\n                  {this.state.sort ? (\r\n                    <span>&#8593;</span>\r\n                  ) : (\r\n                    <span>&#8595;</span>\r\n                  )}{\" \"}\r\n                  SORT\r\n                </button>\r\n                <label className=\"label_input_file file\">\r\n                  Upload\r\n                  <input\r\n                    className=\"custom-file-input\"\r\n                    type=\"file\"\r\n                    id=\"inputLoader\"\r\n                    name=\"inputLoader\"\r\n                    onChange={this.handleInputFileLoader}\r\n                    placeholder=\"what are we looking for?\"\r\n                  />\r\n                </label>{\" \"}\r\n                <button className=\"btn\" onClick={this.getDataFromServer}>\r\n                  Get Data\r\n                </button>\r\n              </div>\r\n              <p className=\"movies-willwatch\">\r\n                Movies will watch:{\" \"}\r\n                <b style={{ color: \"blue\" }}>\r\n                  {this.state.moviesWillWatch.length}\r\n                </b>\r\n              </p>\r\n            </div>\r\n\r\n            {movies.map(movie => {\r\n              if (\r\n                movie.title\r\n                  .toLowerCase()\r\n                  .includes(this.state.inputFilterValue.toLowerCase()) ||\r\n                movie.stars\r\n                  .join(\",\")\r\n                  .toLowerCase()\r\n                  .includes(this.state.inputFilterValue.toLowerCase())\r\n              ) {\r\n                return (\r\n                  <Section\r\n                    key={movie.title}\r\n                    movie={movie}\r\n                    removeItem={this.removeMovieById}\r\n                    addMovieToWillWatch={this.addMovieToWillWatch}\r\n                    removeMovieFromWillWatch={this.removeMovieFromWillWatch}\r\n                    removeMovieByIdFromServer={this.removeMovieByIdFromServer}\r\n                  />\r\n                );\r\n              } else {\r\n                return \"\";\r\n              }\r\n            })}\r\n          </article>\r\n        ) : (\r\n          <article className=\"container__main--moviesList\">\r\n            <h1>\r\n              Choose the correct{\" \"}\r\n              <span style={{ color: \"red\" }}>\r\n                <b>*.txt</b>\r\n              </span>{\" \"}\r\n              file on PC or this project directory named sample_movies[756] and{\" \"}\r\n              <label className=\"label_input_file\">\r\n                Upload\r\n                <input\r\n                  className=\"custom-file-input\"\r\n                  type=\"file\"\r\n                  id=\"inputLoader\"\r\n                  name=\"inputLoader\"\r\n                  onChange={this.handleInputFileLoader}\r\n                  placeholder=\"what are we looking for?\"\r\n                />\r\n              </label>{\" \"}\r\n              it! Or click on{\" \"}\r\n              <span style={{ color: \"red\" }}>\r\n                <b>\r\n                  <button\r\n                    className=\"getButton\"\r\n                    onClick={this.getDataFromServer}\r\n                  >\r\n                    Get\r\n                  </button>\r\n                </b>\r\n              </span>{\" \"}\r\n              button and get data from server. (Heroku or LocalServer)\r\n              <p>\r\n                <a\r\n                  title=\"Heroku server data base link\"\r\n                  alt=\"Heroku\"\r\n                  href=\"https://test-server-node-express.herokuapp.com/movies\"\r\n                >\r\n                  Heroku bd\r\n                </a>\r\n              </p>\r\n            </h1>\r\n          </article>\r\n        )}\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\n\nimport Header from \"./components/Header/Header\";\n\nimport Main from \"./components/Main/Main\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}
{"version":3,"sources":["components/Header/Header.js","components/Main/Section/Section.js","components/Main/Form/Form.js","components/Main/Main.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","Section","props","_props$movie","movie","title","year","format","stars","movieId","_useState","useState","_useState2","Object","slicedToArray","open","setStatus","_useState3","_useState4","will","setCheck","onClick","removeItem","style","float","Fragment","join","removeMovieFromWillWatch","addMovieToWillWatch","toggleWillWatch","Form","inputTitleRef","React","createRef","inputYearRef","inputFormatRef","inputStarsRef","corect","color","textAlign","htmlFor","type","name","id","required","placeholder","autoComplete","pattern","ref","rows","e","preventDefault","date","Date","current","value","newMovie","split","getTime","Math","random","addNewMovie","handleSubmit","Main","state","movies","isLoading","inputFilter","onload","moviesWillWatch","sort","inputFilterValue","handleGetMoviesData","_this","setState","handleInputFileLoader","file","target","files","reader","FileReader","readAsText","loadedFileContentArray","result","filter","Boolean","map","item","_item$split","_item$split2","foo","trim","concat","toConsumableArray","comyMovies","onerror","console","log","error","removeMovieById","updateMovies","updateMoviesWillWatch","sortByAbc","moviesSort","b","nameA","toLowerCase","nameB","getDataFromServer","fetch","then","res","json","data","changeInputFilterValue","method","body","JSON","stringify","_this2","this","_this3","Form_Form","onChange","includes","Main_Section_Section","key","href","download","alt","Component","App","Header_Header","components_Main_Main","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.21c4c117.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Header.css\";\nimport \"../../../node_modules/@fortawesome/fontawesome-free/css/all.css\";\nimport \"../../../node_modules/animate.css/animate.css\";\n\nexport default function Header() {\n  return (\n    <div className=\"header\">\n      <div className=\"header__logo\">\n        <i className=\"animated infinite pulse fas fa-film\">{\"\"}</i>\n      </div>\n      <div className=\"header__title\">\n        <span className=\"animated fadeInDown delay-2s\">MOVIE LIBRARY</span>\n      </div>\n      <div className=\"header__authorization\">\n        {\" \"}\n        <i className=\"animated infinite pulse fas fa-film\">{\"\"}</i>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport \"./Section.css\";\n\nconst Section = props => {\n  const { title, year, format, stars, movieId } = props.movie;\n  let [open, setStatus] = useState(false);\n  let [will, setCheck] = useState(false);\n\n  function toggleWillWatch() {\n    const { movie, removeMovieFromWillWatch, addMovieToWillWatch } = props;\n    if (will) {\n      removeMovieFromWillWatch(movieId);\n      setCheck((will = !will));\n    } else {\n      addMovieToWillWatch(movie);\n      setCheck((will = !will));\n    }\n  }\n  return (\n    <section className=\"container__section--item\">\n      <span\n        className=\"removeButton\"\n        onClick={() => props.removeItem(movieId)}\n        style={{ float: \"right\" }}\n      >\n        ✖\n      </span>\n      <h1\n        className=\"container__section--title\"\n        onClick={() => setStatus((open = !open))}\n      >\n        {title}\n      </h1>\n\n      {open ? (\n        <>\n          <div className=\"container__section--info\">\n            <p>\n              <b>ID:</b> {movieId}\n            </p>\n            <p>\n              <b>Year:</b> {year}\n            </p>\n            <p>\n              {\" \"}\n              <b>Format:</b> {format}{\" \"}\n            </p>\n            <p>\n              {\" \"}\n              <b>Actors:</b> {stars.join(\", \")}{\" \"}\n            </p>\n          </div>\n          <div className=\"container__section--buttons\">\n            <div\n              className={will ? \"btn toggle\" : \"btn\"}\n              onClick={() => toggleWillWatch()}\n            >\n              {will ? \"Added\" : \"Watch\"}\n            </div>\n            <div\n              className=\"btn delete\"\n              onClick={() => props.removeItem(movieId)}\n            >\n              Delete\n            </div>\n          </div>\n        </>\n      ) : (\n        \"\"\n      )}\n    </section>\n  );\n};\n\nexport default Section;\n","import React, { useState } from \"react\";\n\nimport \"./Form.css\";\n\nexport default function Form(props) {\n  const inputTitleRef = React.createRef();\n  const inputYearRef = React.createRef();\n  const inputFormatRef = React.createRef();\n  const inputStarsRef = React.createRef();\n\n  let [corect, setStatus] = useState(true);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let date = new Date();\n\n    if (\n      inputTitleRef.current.value &&\n      inputYearRef.current.value &&\n      inputFormatRef.current.value &&\n      inputStarsRef.current.value\n    ) {\n      setStatus((corect = true));\n      let newMovie = {\n        title: inputTitleRef.current.value,\n        year: inputYearRef.current.value,\n        format: inputFormatRef.current.value,\n        stars: inputStarsRef.current.value.split(\",\"),\n        movieId: date.getTime() + Math.random()\n      };\n\n      props.addNewMovie(newMovie);\n      inputTitleRef.current.value = \"\";\n      inputYearRef.current.value = \"\";\n      inputFormatRef.current.value = \"\";\n      inputStarsRef.current.value = \"\";\n    } else {\n      setStatus((corect = false));\n      return;\n    }\n  };\n  return (\n    <div className=\"contaiter__form\">\n      <form className=\"form\">\n        {!corect ? (\n          <h3 style={{ color: \"red\", textAlign: \"center\" }}>Wrong form</h3>\n        ) : (\n          \"\"\n        )}\n        <label htmlFor=\"title\">\n          Film title\n          <input\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            required\n            placeholder=\"Enter film title\"\n            autoComplete=\"off\"\n            pattern=\"^[A-ZА-ЯЁ]{1}[a-zа-яё]+$\"\n            ref={inputTitleRef}\n          />\n        </label>\n        <label htmlFor=\"year\">\n          Year\n          <input\n            type=\"text\"\n            name=\"year\"\n            id=\"year\"\n            required\n            placeholder=\"Enter year\"\n            autoComplete=\"off\"\n            pattern=\"[0-9]{4}\"\n            ref={inputYearRef}\n          />\n        </label>\n        <label htmlFor=\"format\">\n          Format\n          <input\n            type=\"text\"\n            name=\"format\"\n            id=\"format\"\n            required\n            placeholder=\"Enter format\"\n            autoComplete=\"off\"\n            ref={inputFormatRef}\n          />\n        </label>\n        <label htmlFor=\"stars\">\n          Actors\n          <textarea\n            type=\"text\"\n            name=\"stars\"\n            id=\"stars\"\n            rows=\"2\"\n            required\n            placeholder=\"FirstName LastName, FirstName LastName... \"\n            ref={inputStarsRef}\n          />\n        </label>\n        <div className=\"wrapper__button\">\n          <button type=\"submit\" onClick={e => handleSubmit(e)} className=\"btn\">\n            Add\n          </button>\n          <button type=\"reset\" className=\"btn delete\">\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nimport Section from \"./Section/Section\";\nimport Form from \"./Form/Form\";\n\nimport \"./Main.css\";\n\nclass Main extends Component {\n  state = {\n    movies: [],\n    isLoading: false,\n    inputFilter: \"\",\n    onload: false,\n    moviesWillWatch: [],\n    sort: false,\n    inputFilterValue: \"\"\n  };\n\n  componentDidMount() {\n    fetch(\"https://test-server-node-express.herokuapp.com/movies\")\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          movies: data\n        });\n      });\n  }\n\n  handleGetMoviesData = () => {\n    this.setState({\n      onload: true\n    });\n  };\n\n  handleInputFileLoader = e => {\n    let file = e.target.files[0];\n    let reader = new FileReader();\n    reader.readAsText(file);\n\n    reader.onload = () => {\n      let loadedFileContentArray = reader.result\n        .split(\"\\n\\n\")\n        .filter(Boolean)\n        .map(item => {\n          const [title, year, format, stars] = item.split(\"\\n\");\n\n          const foo = value => value.split(\":\")[1].trim();\n          const getUniqueId = () => {\n            const date = new Date();\n\n            return date.getTime() + Math.random();\n          };\n\n          return {\n            title: foo(title),\n            year: foo(year),\n            format: foo(format),\n            stars: foo(stars)\n              .split(\",\")\n              .map(item => item.trim()),\n            movieId: getUniqueId()\n          };\n        });\n\n      this.setState({\n        movies: [...this.state.movies, ...loadedFileContentArray],\n        onload: true,\n        comyMovies: loadedFileContentArray\n      });\n    };\n\n    reader.onerror = function() {\n      console.log(reader.error);\n    };\n  };\n\n  removeMovieById = id => {\n    const updateMovies = this.state.movies.filter(function(movie) {\n      return movie.movieId !== id;\n    });\n\n    this.setState({\n      movies: updateMovies\n    });\n  };\n\n  addMovieToWillWatch = movie => {\n    const updateMoviesWillWatch = [...this.state.moviesWillWatch, movie];\n    this.setState({\n      moviesWillWatch: updateMoviesWillWatch\n    });\n  };\n\n  removeMovieFromWillWatch = id => {\n    const updateMoviesWillWatch = this.state.moviesWillWatch.filter(function(\n      movie\n    ) {\n      return movie.movieId !== id;\n    });\n\n    this.setState({\n      moviesWillWatch: updateMoviesWillWatch\n    });\n  };\n  sortByAbc = () => {\n    let moviesSort = [...this.state.movies];\n    if (!this.state.sort) {\n      moviesSort.sort(function(a, b) {\n        var nameA = a.title.toLowerCase(),\n          nameB = b.title.toLowerCase();\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0;\n      });\n    } else {\n      moviesSort.sort(function(a, b) {\n        var nameA = a.title.toLowerCase(),\n          nameB = b.title.toLowerCase();\n        if (nameA < nameB) return 1;\n        if (nameA > nameB) return -1;\n        return 0;\n      });\n    }\n    this.setState({\n      movies: moviesSort,\n      sort: !this.state.sort\n    });\n  };\n  getDataFromServer = () => {\n    fetch(\"https://test-server-node-express.herokuapp.com/movies\")\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          movies: data,\n          onload: true\n        });\n      });\n  };\n\n  changeInputFilterValue = e => {\n    this.setState({\n      inputFilterValue: e.target.value\n    });\n  };\n\n  addNewMovie = movie => {\n    fetch(\"https://test-server-node-express.herokuapp.com/movies\", {\n      method: \"POST\",\n      body: JSON.stringify(movie)\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          movies: [...this.state.movies, movie]\n        });\n      });\n  };\n\n  render() {\n    const { movies } = this.state;\n    return (\n      <main className=\"container__main\">\n        <article className=\"container__main--form\">\n          <Form addNewMovie={this.addNewMovie} />\n        </article>\n        <article className=\"container__main--inputs\" />\n\n        {this.state.onload ? (\n          <article className=\"container__main--moviesList\">\n            <div className=\"inputFilter\">\n              <label>\n                <input\n                  className=\"inputFilter__input\"\n                  type=\"text\"\n                  id=\"inputFilter\"\n                  name=\"inputFilter\"\n                  value={this.state.inputFilterValue}\n                  onChange={this.changeInputFilterValue}\n                  placeholder=\"Enter your value\"\n                />\n              </label>\n              <div className=\"wrapper__button\">\n                <button className=\"btn sortbutton\" onClick={this.sortByAbc}>\n                  {this.state.sort ? (\n                    <span>&#8593;</span>\n                  ) : (\n                    <span>&#8595;</span>\n                  )}{\" \"}\n                  SORT\n                </button>\n                <button className=\"btn\" onClick={this.getDataFromServer}>\n                  Get Data\n                </button>\n              </div>\n            </div>\n\n            {movies.map(movie => {\n              if (\n                movie.title.includes(this.state.inputFilterValue) ||\n                movie.stars.join(\",\").includes(this.state.inputFilterValue)\n              ) {\n                return (\n                  <Section\n                    key={movie.title}\n                    movie={movie}\n                    removeItem={this.removeMovieById}\n                    addMovieToWillWatch={this.addMovieToWillWatch}\n                    removeMovieFromWillWatch={this.removeMovieFromWillWatch}\n                  />\n                );\n              } else {\n                return \"\";\n              }\n            })}\n          </article>\n        ) : (\n          <article className=\"container__main--moviesList\">\n            <h1>\n              Choose the correct{\" \"}\n              <span style={{ color: \"red\" }}>\n                <b>*.txt</b>\n              </span>{\" \"}\n              file on PC or this project directory{\" \"}\n              <a href=\"../../sample_movies[756].txt\" download>\n                sample_movies.txt\n              </a>{\" \"}\n              and{\" \"}\n              <label className=\"label_input_file\">\n                Upload\n                <input\n                  className=\"custom-file-input\"\n                  type=\"file\"\n                  id=\"inputLoader\"\n                  name=\"inputLoader\"\n                  onChange={this.handleInputFileLoader}\n                  placeholder=\"what are we looking for?\"\n                />\n              </label>{\" \"}\n              it! Or click on{\" \"}\n              <span style={{ color: \"red\" }}>\n                <b>\n                  <button\n                    className=\"getButton\"\n                    onClick={this.getDataFromServer}\n                  >\n                    Get\n                  </button>\n                </b>\n              </span>{\" \"}\n              button and get data from server. (Heroku or LocalServer)\n              <p>\n                <a\n                  title=\"Heroku server data base link\"\n                  alt=\"Heroku\"\n                  href=\"https://test-server-node-express.herokuapp.com/movies\"\n                >\n                  Heroku bd\n                </a>\n              </p>\n            </h1>\n          </article>\n        )}\n      </main>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\n\nimport Header from \"./components/Header/Header\";\n\nimport Main from \"./components/Main/Main\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}